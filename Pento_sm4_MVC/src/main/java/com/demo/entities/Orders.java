package com.demo.entities;
// Generated Feb 23, 2024, 1:06:06â€¯PM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import jakarta.persistence.*;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name = "orders", catalog = "pento_sm4")
public class Orders implements java.io.Serializable {

	private Integer id;
	private Tables tables;
	private User user;
	private int totalMember;
	private boolean children;
	private String status;
	private Date created;
	private Date arrivalDate;
	private Set<OrderDetail> orderDetails = new HashSet<OrderDetail>(0);
	private Set<Transaction> transactions = new HashSet<Transaction>(0);

	public Orders() {
	}

	public Orders(User user, int totalMember, boolean children, String status, Date created, Date arrivalDate) {
		this.user = user;
		this.totalMember = totalMember;
		this.children = children;
		this.status = status;
		this.created = created;
		this.arrivalDate = arrivalDate;
	}

	public Orders(Tables tables, User user, int totalMember, boolean children, String status, Date created,
			Date arrivalDate, Set<OrderDetail> orderDetails, Set<Transaction> transactions) {
		this.tables = tables;
		this.user = user;
		this.totalMember = totalMember;
		this.children = children;
		this.status = status;
		this.created = created;
		this.arrivalDate = arrivalDate;
		this.orderDetails = orderDetails;
		this.transactions = transactions;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "table_id")
	public Tables getTables() {
		return this.tables;
	}

	public void setTables(Tables tables) {
		this.tables = tables;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "total_member", nullable = false)
	public int getTotalMember() {
		return this.totalMember;
	}

	public void setTotalMember(int totalMember) {
		this.totalMember = totalMember;
	}

	@Column(name = "children", nullable = false)
	public boolean isChildren() {
		return this.children;
	}

	public void setChildren(boolean children) {
		this.children = children;
	}

	@Column(name = "status", nullable = false, length = 250)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created", nullable = false, length = 10)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "arrival_date", nullable = false, length = 10)
	public Date getArrivalDate() {
		return this.arrivalDate;
	}

	public void setArrivalDate(Date arrivalDate) {
		this.arrivalDate = arrivalDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<OrderDetail> getOrderDetails() {
		return this.orderDetails;
	}

	public void setOrderDetails(Set<OrderDetail> orderDetails) {
		this.orderDetails = orderDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<Transaction> getTransactions() {
		return this.transactions;
	}

	public void setTransactions(Set<Transaction> transactions) {
		this.transactions = transactions;
	}

}
